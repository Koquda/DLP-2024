CATEGORIES
expression;
statement;
definition;
type;

NODES

program -> definition* ;

varDefinition:definition -> string type;
structDefinition:definition -> string structField*;
funcDefinition:definition -> string funcParam* type definition* statement*;

structField -> string type ;
funcParam -> string type ;

assignment:statement -> left:expression right:expression;
funcCallStatement:statement -> string expression* ;
if:statement -> expression ifBody:statement* elseBody:statement*;
while:statement -> expression statement* ;
read:statement -> expression ;
print:statement -> expression? lexema:string;
return:statement -> expression? ;


intLiteral:expression -> int ;
floatLiteral:expression -> float ;
charLiteral:expression -> char ;
variable:expression -> string ;
arithmetic:expression -> left:expression operator1:string right:expression ;
arithmeticComparison:expression -> left:expression operator:string right:expression ;
logicalComparison:expression -> left:expression operator:string right:expression ;
negation:expression -> expression ;
funcCallExpression:expression -> string expression* ;
structAccess:expression -> expression string ;
cast:expression -> type expression ;
arrayAccess:expression -> left:expression right:expression ;

intType:type -> ;
floatType:type -> ;
charType:type -> ;
varType:type -> string;
arrayType:type -> int type ;
structType:type -> string ;
voidType:type -> ;
errorType:type -> ;